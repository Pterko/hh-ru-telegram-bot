stages:
  # - build 
  - deploy

# build:
#   stage: build
#   image: docker:stable
#   services:
#     - docker:dind
#   variables:
#     DOCKER_HOST: tcp://docker:2375
#     DOCKER_DRIVER: overlay2
#   script:
#     - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

#     - docker build --tag $CI_REGISTRY_IMAGE/bot:$CI_COMMIT_REF_SLUG -f Dockerfile.bot .
#     - docker push $CI_REGISTRY_IMAGE/bot:$CI_COMMIT_REF_SLUG

#     - docker build --tag $CI_REGISTRY_IMAGE/resume-updater:$CI_COMMIT_REF_SLUG -f Dockerfile.resume-updater .
#     - docker push $CI_REGISTRY_IMAGE/resume-updater:$CI_COMMIT_REF_SLUG

#     - docker build --tag $CI_REGISTRY_IMAGE/token-updater:$CI_COMMIT_REF_SLUG -f Dockerfile.token-updater .
#     - docker push $CI_REGISTRY_IMAGE/token-updater:$CI_COMMIT_REF_SLUG
#   only:
#     - master
#     - dev

deploy_dev:
  stage: deploy
  image: 
    name: lachlanevenson/k8s-kubectl:latest
    # entrypoint: ["/bin/sh", "-c"]
  script:
    - echo $KUBE_NAMESPACE
    - echo $KUBE_URL
    - echo $KUBECONFIG
    - cat $KUBECONFIG
    - echo $KUBE_TOKEN

    # - kubectl version
    # - |
    #   if kubectl apply -f ./deployments/bot.yaml | grep -q unchanged; then
    #       echo "=> Patching deployment to force image update."
    #       kubectl patch -f ./deployments/bot.yaml -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"ci-last-updated\":\"$(date +'%s')\"}}}}}"
    #   else
    #       echo "=> Deployment apply has changed the object, no need to force image update."
    #   fi
    # - kubectl rollout status -f ./deployments/bot.yaml
    # - kubectl get all
  environment:
    name: dev
    url: https://dev.hhbot.pterko.ru/
  only:
    - dev


        
