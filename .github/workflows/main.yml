name: Main-Pipeline


on:
  workflow_dispatch:
  push:
    branches: [main, dev]
  #pull_request:
  #  branches: [main, dev]



jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: |-
      ${{
         github.ref_name == 'main' && 'Prod'
      || github.ref_name == 'dev'  && 'Dev'
      }}
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      # - run: cd new-bot && npm ci
      # - run: cd new-bot && npm run lint
      # - run: cd new-bot && npm run typecheck

      # Build Docker Image
      - name: Build Docker image
        run: docker build  -t ghcr.io/pterko/hh-ru-telegram-bot:${{ github.ref_name }} .

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Push Docker Image with branch name
      - name: Push Docker image with branch name
        run: docker push ghcr.io/pterko/hh-ru-telegram-bot:${{ github.ref_name }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    environment: |-
      ${{
         github.ref_name == 'main' && 'Prod'
      || github.ref_name == 'dev'  && 'Dev'
      ||                              'Staging'
      }}
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Trigger Watchtower to update containers
        run: |
          curl -H "Authorization: Bearer ${{ secrets.WATCHTOWER_API_TOKEN }}" -X POST ${{ secrets.WATCHTOWER_UPDATE_URL }}

  # auto-merge:
  #   if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
  #   runs-on: ubuntu-latest
  #   needs: build-and-test
  #   env:
  #     token: ${{ secrets.DEPENDABOT_TOKEN }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Check if secrets.DEPENDABOT_TOKEN is set
  #       if: ${{ env.token == '' }}
  #       run: exit 1
  #     - uses: ahmadnassri/action-dependabot-auto-merge@v2
  #       with:
  #         target: minor
  #         command: squash and merge
  #         # https://github.com/ahmadnassri/action-dependabot-auto-merge#token-scope
  #         github-token: ${{ env.token }}